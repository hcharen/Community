# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

# turbolinks must be loaded before we get the party started
document.addEventListener 'turbolinks:load', ->
  if document.getElementById('new-item-form')
    #  Assign the elements being called to variables
    openItemButton = document.getElementById('new-item-button')
    itemPopover = document.getElementById('new-item-popover')
    itemForm = document.getElementById('new-item-form')
    itemName = document.getElementById('item-name-input')
    # Before adding listeners, check to see if elements exist
    if openItemButton and itemPopover
      # add event listening to new item button
      openItemButton.addEventListener 'click', (->
        # get rid of the 'is-hidden' class if it is there
        if itemPopover.classList.contains('is-hidden') then itemPopover.classList.remove('is-hidden') else null
      ), false
      #  Give cancel button an event listener
      cancelItemPopover = document.getElementById('cancel-item-popover')
      cancelItemPopover.addEventListener 'click', (->
        # hide the pop over once more
        itemPopover.classList.add 'is-hidden'
      ), false
    # for handling errors from the item form submission
    itemForm.addEventListener 'ajax:error', (xhr, status, err) ->
      console.log xhr
      # supply error class to the item name input
      itemName.classList.add 'is-invalid'
      # add error message node
      errorNode = document.createElement('div')
      errorTextNode = document.createTextNode('Name must not be blank')
      errorNode.classList.add 'invalid-feedback'
      errorNode.appendChild errorTextNode

      itemName.parentNode.insertBefore errorNode, itemName.nextSibling
      return
  return

# ---
# generated by js2coffee 2.2.0
